---
- name: rvm ~> Detect rvm binary
  stat:
    path: "{{ rvm_executable }}"
  register: rvm_binary

- name: rvm ~> Detect rvm installer
  stat: path='{{ rvm_temp_download_path }}/rvm-installer.sh'
  register: rvm_installer

- name: rvm ~> Detect current rvm version
  command: '{{ rvm_executable }} version'
  changed_when: False
  register: rvm_current_version
  when: rvm_binary.stat.exists

- name: rvm ~> Install rvm installer
  get_url:
    url: '{{ rvm_latest_installer }}'
    dest: '{{ rvm_temp_download_path }}/rvm-installer.sh'
    mode: 0755
  when: not rvm_installer.stat.exists and not rvm_binary.stat.exists

- name: Import GPG keys from keyservers
  shell: 'gpg --batch --keyserver {{ item }} --recv-keys {{ rvm_gpg_keys }}'
  changed_when: False
  check_mode: False
  with_items: '{{ rvm_gpg_key_servers }}'
  register: rvm_gpg_import
  when: not ansible_check_mode and rvm_gpg_keys != '' and (rvm_gpg_import is not defined or rvm_gpg_import.rc != 0)
  ignore_errors: True

- name: rvm ~> Install rvm
  command: >
    {{ rvm_temp_download_path }}/rvm-installer.sh {{ rvm_version }}
    --path {{ rvm_install_path }} {{ rvm_install_flags }}
  when: not rvm_binary.stat.exists

- name: rvm ~> Update rvm
  command: '{{ rvm_executable }} get {{ rvm_version }} && {{ rvm_executable }} reload'
  changed_when: False
  ignore_errors: yes
  when: rvm_binary.stat.exists and rvm_check_for_updates

- name: rvm ~> Configure rvm
  command: '{{ rvm_executable }} autolibs {{ rvm_autolib_mode }}'
  when: not rvm_binary.stat.exists
